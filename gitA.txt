1.git으로 관리할 경로까지 이동

2.초기화(.git 폴더 생성됨 - 숨겨져 있음)
git init

-> ls -al (숨겨진 파일확인)
-> .git 폴더 삭제(rm -rf .git)

~~코드 작업~~


~~commit 사전작업~~

3.브랜치 이름 기본값 변경하기(mater일때)
git config --global init.defaultBranch main (초기값 변경)
git branch -M main (현재 브랜치명 수정)
# git bash 안쓰면 main이 안뜰수도 있음 그래서 git bash로 해야 편함

4.git 상태확인
git status

7.commit 이전에 계정정보 등록(--global 옵션은 해당 컴퓨터 전체에 적용, global 하지 마쇼)
git config (--global) user.name "your name"
git config (--global) user.email you@example.com

# 정보확인
git config list 

# 삭제법
git contig --global --unset user.name
git contig --global --unset user.email


~~commit 하기~~

5.git으로 관리하는 파일로 추가
git add . (.은 현재 위치를 추가.)

6.commit(해당 시점을 저장; 중요지점에서 저장하는 개념)
git comit -m "커밋 메시지"

8.commit 정보 확인
git log

9.(과제)
project5/test1를 생성
git으로 관리
파일생성은 알아서... 최소 커밋의 수는 5번 이상 되도록 하세요.

-----------------------------------------------------------------
로컬 컴퓨터(코드있음)와 git hub사이트(비어있음) 연결
1. remote 정보확인
git remote
git remote -V

2.reomote
git remote add origin https://github.com/Deepday01/DSAD_work1.git
git push -u origin main

3.삭제
git remote rm 리모트이름
git remote rm origi

4. github 데이터 넣기
git push -u origin main
git push

...강사님꺼...
# https://github.com/shimseonjo/project5_work1

---------------------------------------------------------------------------------------
clone 하기
- 코드가 없는 상태에서 전체 코드를 다운로드 받을 경우

# 현재 위치에 리파지토리 이름의 폴더를 만들고 파일을 가져온다.
git clone <git-remote-url>

# <디렉토리> 위치에 파일을 가져온다.
git clone <git-remote-url> <디렉토리>
git clone <git-remote-url> .

--------------------------------------
pull 
- 코드가 있는 상태에서 변경된 부분만 받을 경우
git pull

--------------------------------------

파일 제외시키기
.gitignore

--------------------------------------
브랜치 작성
-브랜치 목록 확인
git branch

-브랜치 생성
git branch 브랜치이름

-브랜치 이동
git switch 브랜치이름

-브랜치에서 소스 코딩, add, commit 작업 진행

--------------------------------------
브랜치 병합
-main에서(main으로 코드 합류)
git merge 브랜치명
git add .
git commit -m "메시지"

브랜치 삭제
git branch -d 브랜치명

브랜치 복구
git branch 브랜치명 커밋번호

깃그래프 확인
git log # --graph # --all # --oneline

-----------수요일 완료------------------
